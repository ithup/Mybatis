<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
mapper接口代理实现编写规则:
	1. 映射文件中namespace要等于接口的全路径名称
	2. 映射文件中sql语句id要等于接口的方法名称
	3. 映射文件中传入参数类型要等于接口方法的传入参数类型
	4. 映射文件中返回结果集类型要等于接口方法的返回值类型
 -->
<mapper namespace="UserMapperVo">
	<!-- 封装sql条件,封装后可以重用. 
	id:是这个sql条件的唯一标识 -->
	<sql id="user_where">
		<!-- where标签作用:
				会自动向sql语句中添加where关键字
				会去掉第一个条件的and关键字
			 -->
		<where>
			<if test="username != null and username != ''">
					and username like '%${username}%'
			</if>
			<if test="sex != null and sex !=''">
				and sex=#{sex}
			</if>
		</where>
		
	</sql>
	
	<!-- 批量查询、删除 -->
	<sql id="user_in">
			<where>
				<!-- 
				foreach:循环传入的集合参数
				collection:传入的集合的变量名称
				item:每次循环将循环出的数据放入这个变量中
				open:循环开始拼接的字符串
				close:循环结束拼接的字符串
				separator:循环中拼接的分隔符
				 -->
				 <if test="ids != null">
			 	<!-- id in(1,2,4) -->
			 	<foreach collection="" item="id" open="id in (" close=")" separator=",">
			 		#{id}
			 	</foreach>
			 	</if>
			</where>
	</sql>
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>